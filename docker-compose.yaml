version: '3.5'

services:
  zookeeper:
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - kafkastreams-network

  kafka:
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS} --override log.message.timestamp.type=$${KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime
    networks:
      - kafkastreams-network

  ksql-server:
    image: confluentinc/cp-ksql-server:5.1.0
    depends_on:
      - kafka
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
    networks:
      - kafkastreams-network
  
  ksql-cli:
    image: confluentinc/cp-ksql-cli:5.1.0
    depends_on:
      - ksql-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - kafkastreams-network

  tile-server:
    image: tile38/tile38
    ports:
      - "9851:9851"
    networks:
      - kafkastreams-network

  source:
    image: leonardobonacci/train-source:1.0
    depends_on:
      - tile-server
    build:
      context: source
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafkastreams-network

  arrivals:
    image: leonardobonacci/train-arrival-processor:1.0
    build:
      context: arrival-processor
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafkastreams-network

networks:
  kafkastreams-network:
    name: ks
    
